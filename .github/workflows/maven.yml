# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: academy
  TAG_NAME: "v1.0"
  ARTIFACT_NAME: ${{ env.DOCKER_IMAGE_NAME }}-${{ env.DOCKER_TAG_NAME }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      uses: ./.github/actions/maven_build
    - name: Docker new Image
      uses: ./.github/actions/docker_build
      with:
        image_name: ${{ env.IMAGE_NAME }}
        tag_name: ${{ env.TAG_NAME }}
        path_dockerfile: "src/main/docker/Dockerfile.jvm"
    - name: Save Docker img
      run: docker save -o ${{ env.DOCKER_IMAGE_NAME }}-${{ env.DOCKER_TAG_NAME }}.tar ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG_NAME }}
    - name: Upload Docker img as artifact
      uses: actions/checkout@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.DOCKER_IMAGE_NAME }}-${{ env.DOCKER_TAG_NAME }}.tar
  list-imgs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
      - name: Images ls
        run: docker image ls